// Code generated by go-swagger; DO NOT EDIT.

package sales

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "trade-shop/pkg/models"
)

// SaleOKCode is the HTTP code returned for type SaleOK
const SaleOKCode int = 200

/*SaleOK OK

swagger:response saleOK
*/
type SaleOK struct {
}

// NewSaleOK creates SaleOK with default headers values
func NewSaleOK() *SaleOK {

	return &SaleOK{}
}

// WriteResponse to the client
func (o *SaleOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

// SaleBadRequestCode is the HTTP code returned for type SaleBadRequest
const SaleBadRequestCode int = 400

/*SaleBadRequest Логическая ошибка

swagger:response saleBadRequest
*/
type SaleBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResult `json:"body,omitempty"`
}

// NewSaleBadRequest creates SaleBadRequest with default headers values
func NewSaleBadRequest() *SaleBadRequest {

	return &SaleBadRequest{}
}

// WithPayload adds the payload to the sale bad request response
func (o *SaleBadRequest) WithPayload(payload *models.ErrorResult) *SaleBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the sale bad request response
func (o *SaleBadRequest) SetPayload(payload *models.ErrorResult) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SaleBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// SaleUnauthorizedCode is the HTTP code returned for type SaleUnauthorized
const SaleUnauthorizedCode int = 401

/*SaleUnauthorized Пользователь не аутентифицирован в системе

swagger:response saleUnauthorized
*/
type SaleUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResult `json:"body,omitempty"`
}

// NewSaleUnauthorized creates SaleUnauthorized with default headers values
func NewSaleUnauthorized() *SaleUnauthorized {

	return &SaleUnauthorized{}
}

// WithPayload adds the payload to the sale unauthorized response
func (o *SaleUnauthorized) WithPayload(payload *models.ErrorResult) *SaleUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the sale unauthorized response
func (o *SaleUnauthorized) SetPayload(payload *models.ErrorResult) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SaleUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
