// Code generated by go-swagger; DO NOT EDIT.

package exchange

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "trade-shop/pkg/models"
)

// ExchangeRatesOKCode is the HTTP code returned for type ExchangeRatesOK
const ExchangeRatesOKCode int = 200

/*ExchangeRatesOK OK

swagger:response exchangeRatesOK
*/
type ExchangeRatesOK struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewExchangeRatesOK creates ExchangeRatesOK with default headers values
func NewExchangeRatesOK() *ExchangeRatesOK {

	return &ExchangeRatesOK{}
}

// WithPayload adds the payload to the exchange rates o k response
func (o *ExchangeRatesOK) WithPayload(payload interface{}) *ExchangeRatesOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the exchange rates o k response
func (o *ExchangeRatesOK) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ExchangeRatesOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// ExchangeRatesUnauthorizedCode is the HTTP code returned for type ExchangeRatesUnauthorized
const ExchangeRatesUnauthorizedCode int = 401

/*ExchangeRatesUnauthorized Пользователь не аутентифицирован в системе

swagger:response exchangeRatesUnauthorized
*/
type ExchangeRatesUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResult `json:"body,omitempty"`
}

// NewExchangeRatesUnauthorized creates ExchangeRatesUnauthorized with default headers values
func NewExchangeRatesUnauthorized() *ExchangeRatesUnauthorized {

	return &ExchangeRatesUnauthorized{}
}

// WithPayload adds the payload to the exchange rates unauthorized response
func (o *ExchangeRatesUnauthorized) WithPayload(payload *models.ErrorResult) *ExchangeRatesUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the exchange rates unauthorized response
func (o *ExchangeRatesUnauthorized) SetPayload(payload *models.ErrorResult) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ExchangeRatesUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
