// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "title": "Trade Shop",
    "version": "0.1.0"
  },
  "paths": {
    "/exchange_rates": {
      "get": {
        "description": "Курсы обмена валют",
        "tags": [
          "exchange"
        ],
        "operationId": "exchange_rates",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Пользователь не аутентифицирован в системе",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          }
        }
      }
    },
    "/login": {
      "post": {
        "description": "Аутентификация пользователя по почте и паролю.",
        "tags": [
          "login"
        ],
        "operationId": "login",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Информация пользователя для входа в систему",
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "x-insullable": false
                },
                "password": {
                  "type": "string",
                  "x-insullable": false
                }
              },
              "example": {
                "email": "speaker@mail.com",
                "password": "123456"
              }
            }
          }
        ],
        "responses": {
          "302": {
            "description": "Редирект",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "401": {
            "description": "Пользователь не аутентифицирован в системе",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          }
        }
      }
    },
    "/sales": {
      "get": {
        "description": "Список лотов",
        "tags": [
          "sales"
        ],
        "operationId": "sales_list",
        "responses": {
          "200": {
            "description": "Список лотов",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/sale"
              }
            }
          },
          "401": {
            "description": "Пользователь не аутентифицирован в системе",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          }
        }
      }
    },
    "/sales/{sale_id}/buy": {
      "get": {
        "description": "Купить лот",
        "tags": [
          "sales"
        ],
        "operationId": "buy",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "description": "идентификатор продажи",
            "name": "sale_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Логическая ошибка",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          },
          "401": {
            "description": "Пользователь не аутентифицирован в системе",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          }
        }
      }
    },
    "/user": {
      "post": {
        "description": "Регистрация нового пользователя",
        "tags": [
          "register"
        ],
        "operationId": "register",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Информация о новом пользователе",
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "x-insullable": false
                },
                "password": {
                  "type": "string",
                  "x-insullable": false
                }
              },
              "example": {
                "email": "speaker@mail.com",
                "password": "123456"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Логическая ошибка",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          }
        }
      }
    },
    "/user/inventory": {
      "get": {
        "description": "User inventory",
        "tags": [
          "user"
        ],
        "operationId": "inventory",
        "responses": {
          "200": {
            "description": "Inventory",
            "schema": {
              "type": "object",
              "properties": {
                "bill": {
                  "description": "User's bill",
                  "type": "string"
                },
                "items": {
                  "description": "User's items",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/item"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Пользователь не аутентифицирован в системе",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          }
        }
      }
    },
    "/user/logout": {
      "get": {
        "description": "logout",
        "tags": [
          "user"
        ],
        "operationId": "logout",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Пользователь не аутентифицирован в системе",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          }
        }
      }
    },
    "/user/sale": {
      "post": {
        "description": "Продажа предмета пользователем",
        "tags": [
          "sales"
        ],
        "operationId": "sale",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Список предметов на продажу",
              "type": "array",
              "items": {
                "$ref": "#/definitions/itemSale"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Логическая ошибка",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          },
          "401": {
            "description": "Пользователь не аутентифицирован в системе",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          }
        }
      }
    },
    "/user/sales": {
      "get": {
        "description": "Список лотов пользователя",
        "tags": [
          "user"
        ],
        "operationId": "user_sales_list",
        "responses": {
          "200": {
            "description": "Список лотов пользователя",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/sale"
              }
            }
          },
          "401": {
            "description": "Пользователь не аутентифицирован в системе",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          }
        }
      }
    },
    "/user/sales/{sale_id}/cancel": {
      "get": {
        "description": "Отменить продажу",
        "tags": [
          "user"
        ],
        "operationId": "cancel",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "description": "идентификатор продажи",
            "name": "sale_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Логическая ошибка",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          },
          "401": {
            "description": "Пользователь не аутентифицирован в системе",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "errorResult": {
      "description": "Ответ API с ошибкой",
      "type": "object",
      "required": [
        "error"
      ],
      "properties": {
        "error": {
          "type": "object",
          "required": [
            "code",
            "description"
          ],
          "properties": {
            "code": {
              "description": "HTTP-статус ответа",
              "type": "string",
              "x-isnullable": false,
              "example": "003-061"
            },
            "description": {
              "description": "Человекопонятное описание ошибки",
              "type": "string",
              "x-isnullable": false,
              "example": "Object not found"
            }
          }
        }
      }
    },
    "item": {
      "description": "Item",
      "type": "object",
      "properties": {
        "count": {
          "type": "integer"
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "x-nullable": false
        },
        "name": {
          "type": "string"
        }
      }
    },
    "itemSale": {
      "description": "Предметы на продажу",
      "type": "object",
      "properties": {
        "count": {
          "type": "integer"
        },
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "type": "string"
        },
        "price": {
          "type": "number"
        }
      }
    },
    "sale": {
      "description": "Продажа",
      "properties": {
        "id": {
          "description": "id продажи",
          "type": "string",
          "format": "uuid",
          "x-nullable": false
        },
        "items": {
          "type": "array",
          "items": {
            "description": "Предметы на продажу",
            "type": "object",
            "properties": {
              "count": {
                "type": "integer"
              },
              "id": {
                "type": "string",
                "format": "uuid"
              },
              "name": {
                "type": "string"
              },
              "price": {
                "type": "number"
              }
            }
          }
        },
        "total_count": {
          "description": "Общая стоимость лота",
          "type": "number"
        }
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "title": "Trade Shop",
    "version": "0.1.0"
  },
  "paths": {
    "/exchange_rates": {
      "get": {
        "description": "Курсы обмена валют",
        "tags": [
          "exchange"
        ],
        "operationId": "exchange_rates",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Пользователь не аутентифицирован в системе",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          }
        }
      }
    },
    "/login": {
      "post": {
        "description": "Аутентификация пользователя по почте и паролю.",
        "tags": [
          "login"
        ],
        "operationId": "login",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Информация пользователя для входа в систему",
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "x-insullable": false
                },
                "password": {
                  "type": "string",
                  "x-insullable": false
                }
              },
              "example": {
                "email": "speaker@mail.com",
                "password": "123456"
              }
            }
          }
        ],
        "responses": {
          "302": {
            "description": "Редирект",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "401": {
            "description": "Пользователь не аутентифицирован в системе",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          }
        }
      }
    },
    "/sales": {
      "get": {
        "description": "Список лотов",
        "tags": [
          "sales"
        ],
        "operationId": "sales_list",
        "responses": {
          "200": {
            "description": "Список лотов",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/sale"
              }
            }
          },
          "401": {
            "description": "Пользователь не аутентифицирован в системе",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          }
        }
      }
    },
    "/sales/{sale_id}/buy": {
      "get": {
        "description": "Купить лот",
        "tags": [
          "sales"
        ],
        "operationId": "buy",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "description": "идентификатор продажи",
            "name": "sale_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Логическая ошибка",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          },
          "401": {
            "description": "Пользователь не аутентифицирован в системе",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          }
        }
      }
    },
    "/user": {
      "post": {
        "description": "Регистрация нового пользователя",
        "tags": [
          "register"
        ],
        "operationId": "register",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Информация о новом пользователе",
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "x-insullable": false
                },
                "password": {
                  "type": "string",
                  "x-insullable": false
                }
              },
              "example": {
                "email": "speaker@mail.com",
                "password": "123456"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Логическая ошибка",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          }
        }
      }
    },
    "/user/inventory": {
      "get": {
        "description": "User inventory",
        "tags": [
          "user"
        ],
        "operationId": "inventory",
        "responses": {
          "200": {
            "description": "Inventory",
            "schema": {
              "type": "object",
              "properties": {
                "bill": {
                  "description": "User's bill",
                  "type": "string"
                },
                "items": {
                  "description": "User's items",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/item"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Пользователь не аутентифицирован в системе",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          }
        }
      }
    },
    "/user/logout": {
      "get": {
        "description": "logout",
        "tags": [
          "user"
        ],
        "operationId": "logout",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Пользователь не аутентифицирован в системе",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          }
        }
      }
    },
    "/user/sale": {
      "post": {
        "description": "Продажа предмета пользователем",
        "tags": [
          "sales"
        ],
        "operationId": "sale",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Список предметов на продажу",
              "type": "array",
              "items": {
                "$ref": "#/definitions/itemSale"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Логическая ошибка",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          },
          "401": {
            "description": "Пользователь не аутентифицирован в системе",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          }
        }
      }
    },
    "/user/sales": {
      "get": {
        "description": "Список лотов пользователя",
        "tags": [
          "user"
        ],
        "operationId": "user_sales_list",
        "responses": {
          "200": {
            "description": "Список лотов пользователя",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/sale"
              }
            }
          },
          "401": {
            "description": "Пользователь не аутентифицирован в системе",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          }
        }
      }
    },
    "/user/sales/{sale_id}/cancel": {
      "get": {
        "description": "Отменить продажу",
        "tags": [
          "user"
        ],
        "operationId": "cancel",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "description": "идентификатор продажи",
            "name": "sale_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Логическая ошибка",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          },
          "401": {
            "description": "Пользователь не аутентифицирован в системе",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "errorResult": {
      "description": "Ответ API с ошибкой",
      "type": "object",
      "required": [
        "error"
      ],
      "properties": {
        "error": {
          "type": "object",
          "required": [
            "code",
            "description"
          ],
          "properties": {
            "code": {
              "description": "HTTP-статус ответа",
              "type": "string",
              "x-isnullable": false,
              "example": "003-061"
            },
            "description": {
              "description": "Человекопонятное описание ошибки",
              "type": "string",
              "x-isnullable": false,
              "example": "Object not found"
            }
          }
        }
      }
    },
    "item": {
      "description": "Item",
      "type": "object",
      "properties": {
        "count": {
          "type": "integer"
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "x-nullable": false
        },
        "name": {
          "type": "string"
        }
      }
    },
    "itemSale": {
      "description": "Предметы на продажу",
      "type": "object",
      "properties": {
        "count": {
          "type": "integer"
        },
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "type": "string"
        },
        "price": {
          "type": "number"
        }
      }
    },
    "sale": {
      "description": "Продажа",
      "properties": {
        "id": {
          "description": "id продажи",
          "type": "string",
          "format": "uuid",
          "x-nullable": false
        },
        "items": {
          "type": "array",
          "items": {
            "description": "Предметы на продажу",
            "type": "object",
            "properties": {
              "count": {
                "type": "integer"
              },
              "id": {
                "type": "string",
                "format": "uuid"
              },
              "name": {
                "type": "string"
              },
              "price": {
                "type": "number"
              }
            }
          }
        },
        "total_count": {
          "description": "Общая стоимость лота",
          "type": "number"
        }
      }
    }
  }
}`))
}
