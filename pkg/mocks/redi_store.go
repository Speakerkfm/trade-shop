// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import http "net/http"
import mock "github.com/stretchr/testify/mock"
import redistore "gopkg.in/boj/redistore.v1"

import sessions "github.com/gorilla/sessions"

// RediStore is an autogenerated mock type for the RediStore type
type RediStore struct {
	mock.Mock
}

// Close provides a mock function with given fields:
func (_m *RediStore) Close() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Delete provides a mock function with given fields: r, w, session
func (_m *RediStore) Delete(r *http.Request, w http.ResponseWriter, session *sessions.Session) error {
	ret := _m.Called(r, w, session)

	var r0 error
	if rf, ok := ret.Get(0).(func(*http.Request, http.ResponseWriter, *sessions.Session) error); ok {
		r0 = rf(r, w, session)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Get provides a mock function with given fields: r, name
func (_m *RediStore) Get(r *http.Request, name string) (*sessions.Session, error) {
	ret := _m.Called(r, name)

	var r0 *sessions.Session
	if rf, ok := ret.Get(0).(func(*http.Request, string) *sessions.Session); ok {
		r0 = rf(r, name)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*sessions.Session)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*http.Request, string) error); ok {
		r1 = rf(r, name)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// New provides a mock function with given fields: r, name
func (_m *RediStore) New(r *http.Request, name string) (*sessions.Session, error) {
	ret := _m.Called(r, name)

	var r0 *sessions.Session
	if rf, ok := ret.Get(0).(func(*http.Request, string) *sessions.Session); ok {
		r0 = rf(r, name)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*sessions.Session)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*http.Request, string) error); ok {
		r1 = rf(r, name)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Save provides a mock function with given fields: r, w, session
func (_m *RediStore) Save(r *http.Request, w http.ResponseWriter, session *sessions.Session) error {
	ret := _m.Called(r, w, session)

	var r0 error
	if rf, ok := ret.Get(0).(func(*http.Request, http.ResponseWriter, *sessions.Session) error); ok {
		r0 = rf(r, w, session)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// SetKeyPrefix provides a mock function with given fields: p
func (_m *RediStore) SetKeyPrefix(p string) {
	_m.Called(p)
}

// SetMaxAge provides a mock function with given fields: v
func (_m *RediStore) SetMaxAge(v int) {
	_m.Called(v)
}

// SetMaxLength provides a mock function with given fields: l
func (_m *RediStore) SetMaxLength(l int) {
	_m.Called(l)
}

// SetSerializer provides a mock function with given fields: ss
func (_m *RediStore) SetSerializer(ss redistore.SessionSerializer) {
	_m.Called(ss)
}
